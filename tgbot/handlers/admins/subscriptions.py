import time

from aiogram import Dispatcher
from aiogram.types import CallbackQuery

from tgbot.config import days_to_seconds, db, ADMIN_IDS
from tgbot.filters.is_ban import IsBanFilter
from tgbot.misc.keyboards import submonthmenu_inline, subhalfyear_inline, subweekmenu_inline, subfreemenu_inline, \
    subthreemonthmenu_inline, sub_link_inline


async def sub_free_menu(call: CallbackQuery):
    await call.bot.delete_message(call.from_user.id, call.message.message_id)
    await call.bot.send_message(call.from_user.id, '<b>14 –¥–Ω–µ–π (2 –Ω–µ–¥–µ–ª–∏)\n–¶–µ–Ω–∞: 0—Ä\n–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏: 2 –Ω–µ–¥–µ–ª–∏</b>\n\n'
                                                   '–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n<b>- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã</b>',
                                reply_markup=subfreemenu_inline)


async def sub_free(call: CallbackQuery):
    status = db.get_active_status(call.from_user.id)
    if status is False:
        db.set_active_status(call.from_user.id, 1)
        time_sub = int(time.time()) + days_to_seconds(14)
        db.set_time_sub(call.from_user.id, time_sub)
        await call.bot.edit_message_text("–í–∞–º –≤—ã–¥–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –º–µ—Å—è—Ü!\n"
                                         "–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n"
                                         "<b>- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã</b>\n"
                                         "–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É"
                                         " - /start.",
                                         call.message.chat.id, call.message.message_id,
                                         reply_markup=sub_link_inline,)
        for admin in ADMIN_IDS:
            await call.bot.send_message(admin, f"üí∞ –ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞.\n"
                                               f"\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{call.from_user.username}, <b>{call.from_user.first_name}</b>\n"
                                               f"[ID:{call.from_user.id}] —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ñ–æ—Ä–º–∏–ª –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 14 –¥–Ω–µ–π (2 –Ω–µ–¥–µ–ª–∏)."
                                               f"\n\n–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏: <b>14 –¥–Ω–µ–π.</b>")
    else:
        return await call.bot.edit_message_text('–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–æ–±–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É!',
                                                call.message.chat.id, call.message.message_id)


async def sub_week_menu(call: CallbackQuery):
    await call.bot.delete_message(call.from_user.id, call.message.message_id)
    await call.bot.send_message(call.from_user.id, '<b>–ù–µ–¥–µ–ª—è\n–¶–µ–Ω–∞: 150—Ä\n–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏: 1 –Ω–µ–¥–µ–ª—è</b>\n\n'
                                                   '–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n<b>- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã</b>',
                                reply_markup=subweekmenu_inline)


async def sub_month_menu(call: CallbackQuery):
    await call.bot.edit_message_text('<b>–ú–µ—Å—è—Ü\n–¶–µ–Ω–∞: 150—Ä\n–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏: 1 –º–µ—Å—è—Ü</b>\n\n'
                                     '–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n<b>- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã</b>',
                                     call.message.chat.id, call.message.message_id,
                                     reply_markup=submonthmenu_inline)


async def sub_three_month_menu(call: CallbackQuery):
    await call.bot.delete_message(call.from_user.id, call.message.message_id)
    await call.bot.send_message(call.from_user.id, '<b>3 –º–µ—Å—è—Ü–∞\n–¶–µ–Ω–∞: 300—Ä\n–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏: 3 –º–µ—Å—è—Ü–∞</b>\n\n'
                                                   '–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n<b>- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã</b>',
                                reply_markup=subthreemonthmenu_inline)


async def sub_half_year_menu(call: CallbackQuery):
    await call.bot.delete_message(call.from_user.id, call.message.message_id)
    await call.bot.send_message(call.from_user.id, '<b>6 –º–µ—Å—è—Ü–µ–≤ / –ü–æ–ª–≥–æ–¥–∞\n–¶–µ–Ω–∞: 550—Ä\n–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏: 6 –º–µ—Å—è—Ü–µ–≤</b>\n\n'
                                                   '–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n<b>- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã</b>',
                                reply_markup=subhalfyear_inline)


# –≠–¢–û –ü–õ–ê–¢–ï–ñ–ö–ê –ß–ï–†–ï–ó –Æ–ú–ê–ù–ï–ô, –ù–û –í–ò–î–ò–ú–û –ë–û–õ–¨–®–ï –ù–ï –ù–£–ñ–ù–ê–Ø.
# async def sub_week(call: CallbackQuery):
#     await call.bot.delete_message(call.from_user.id, call.message.message_id)
#     await call.bot.send_invoice(chat_id=call.from_user.id, title="–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏",
#                            description="–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã", payload="week_sub",
#                            provider_token=PAYMENT_TOKEN, currency="RUB",
#                            start_parameter="sub_week", prices=[{"label": "–†—É–±", "amount": 15000}])
#
#
# async def sub_month(call: CallbackQuery):
#     await call.bot.delete_message(call.from_user.id, call.message.message_id)
#     await call.bot.send_invoice(chat_id=call.from_user.id, title="–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏",
#                            description="–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã", payload="month_sub",
#                            provider_token=PAYMENT_TOKEN, currency="RUB",
#                            start_parameter="sub_month", prices=[{"label": "–†—É–±", "amount": 15000}])
#
#
# async def sub_three_month(call: CallbackQuery):
#     await call.bot.delete_message(call.from_user.id, call.message.message_id)
#     await call.bot.send_invoice(chat_id=call.from_user.id, title="–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏",
#                            description="–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã", payload="three_month_sub",
#                            provider_token=PAYMENT_TOKEN, currency="RUB",
#                            start_parameter="three_month_sub", prices=[{"label": "–†—É–±", "amount": 30000}])
#
#
# async def sub_half_year(call: CallbackQuery):
#     await call.bot.delete_message(call.from_user.id, call.message.message_id)
#     await call.bot.send_invoice(chat_id=call.from_user.id, title="–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏",
#                            description="–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã", payload="halfyear_sub",
#                            provider_token=PAYMENT_TOKEN, currency="RUB",
#                            start_parameter="sub_half_year", prices=[{"label": "–†—É–±", "amount": 50000}])
#
#
# async def process_pre_checkout_query(pre_checkout_query: PreCheckoutQuery):
#     await pre_checkout_query.bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)
#
#
# async def process_pay(message: Message):
#     if message.successful_payment.invoice_payload == "month_sub":
#         time_sub = int(time.time()) + days_to_seconds(30)
#         db.set_time_sub(message.from_user.id, time_sub)
#         await message.bot.send_message(message.from_user.id, "–í–∞–º –≤—ã–¥–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –º–µ—Å—è—Ü!\n"
#                                                              "–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n"
#                                                              "<b>- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã</b>\n"
#                                                              "–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É"
#                                                              " - /start.", reply_markup=sub_link_inline)
#         for admin in ADMIN_IDS:
#             await message.bot.send_message(admin, f"üí∞ –ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞.\n"
#                                                   f"\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username}, <b>{message.from_user.first_name}</b>\n"
#                                                   f"[ID:{message.from_user.id}] —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ñ–æ—Ä–º–∏–ª –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –º–µ—Å—è—Ü."
#                                                   f"\n\n–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏: 30 –¥–Ω–µ–π.")
#     elif message.successful_payment.invoice_payload == 'three_month_sub':
#         time_sub = int(time.time()) + days_to_seconds(90)
#         db.set_time_sub(message.from_user.id, time_sub)
#         await message.bot.send_message(message.from_user.id, "–í–∞–º –≤—ã–¥–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 3 –º–µ—Å—è—Ü–∞!\n"
#                                                              "–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n"
#                                                              "<b>- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã</b>\n"
#                                                              "–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É"
#                                                              " - /start.", reply_markup=sub_link_inline)
#         for admin in ADMIN_IDS:
#             await message.bot.send_message(admin, f"üí∞ –ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞.\n"
#                                                   f"\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username}, <b>{message.from_user.first_name}</b>\n"
#                                                   f"[ID:{message.from_user.id}] —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ñ–æ—Ä–º–∏–ª –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 3 –º–µ—Å—è—Ü–∞."
#                                                   f"\n\n–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏: 90 –¥–Ω–µ–π.")
#     elif message.successful_payment.invoice_payload == "halfyear_sub":
#         time_sub = int(time.time()) + days_to_seconds(180)
#         db.set_time_sub(message.from_user.id, time_sub)
#         await message.bot.send_message(message.from_user.id, "–í–∞–º –≤—ã–¥–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–æ–ª–≥–æ–¥–∞!"
#                                                              "–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n"
#                                                              "<b>- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã</b>\n"
#                                                              "–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É"
#                                                              " - /start.", reply_markup=sub_link_inline)
#         for admin in ADMIN_IDS:
#             await message.bot.send_message(admin, f"üí∞ –ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞.\n"
#                                                   f"\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username}, <b>{message.from_user.first_name}</b>\n"
#                                                   f"[ID:{message.from_user.id}] —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ñ–æ—Ä–º–∏–ª –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –ø–æ–ª–≥–æ–¥–∞."
#                                                   f"\n\n–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏: 180 –¥–Ω–µ–π.")
#     elif message.successful_payment.invoice_payload == "week_sub":
#         time_sub = int(time.time()) + days_to_seconds(7)
#         db.set_time_sub(message.from_user.id, time_sub)
#         await message.bot.send_message(message.from_user.id, "–í–∞–º –≤—ã–¥–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é!"
#                                                              "–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n"
#                                                              "<b>- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã</b>\n"
#                                                              "–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É"
#                                                              " - /start.", reply_markup=sub_link_inline)
#         for admin in ADMIN_IDS:
#             await message.bot.send_message(admin, f"üí∞ –ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞.\n"
#                                                   f"\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username}, <b>{message.from_user.first_name}</b>\n"
#                                                   f"[ID:{message.from_user.id}] —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ñ–æ—Ä–º–∏–ª –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–µ–¥–µ–ª—é."
#                                                   f"\n\n–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏: 7 –¥–Ω–µ–π.")


def register_subscription_handlers(dp: Dispatcher):
    dp.register_callback_query_handler(
        sub_free_menu, IsBanFilter(), text='subfreemenu', state='*'
    )
    dp.register_callback_query_handler(
        sub_free, IsBanFilter(), text='subfree', state='*'
    )
    dp.register_callback_query_handler(
        sub_week_menu, IsBanFilter(), text='subweekmenu', state='*'
    )
    dp.register_callback_query_handler(
        sub_month_menu, IsBanFilter(), text='submonthmenu', state='*'
    )
    dp.register_callback_query_handler(
        sub_three_month_menu, IsBanFilter(), text='subthreemonthmenu', state='*'
    )
    dp.register_callback_query_handler(
        sub_half_year_menu, IsBanFilter(), text='subhalfyearmenu', state='*'
    )
    # dp.register_callback_query_handler(
    #     sub_week, IsBanFilter(), text='subweek', state='*'
    # )
    # dp.register_callback_query_handler(
    #     sub_month, IsBanFilter(), text="submonth", state='*'
    # )
    # dp.register_callback_query_handler(
    #     sub_half_year, IsBanFilter(), text="subhalfyear", state='*'
    # )
    # dp.register_pre_checkout_query_handler(
    #     process_pre_checkout_query, IsBanFilter(), state='*'
    # )
    # dp.register_message_handler(
    #     process_pay, IsBanFilter(), content_types=ContentType.SUCCESSFUL_PAYMENT, state='*'
    # )
