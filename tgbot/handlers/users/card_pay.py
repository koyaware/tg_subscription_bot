from aiogram import Dispatcher
from aiogram.types import CallbackQuery, Message

from tgbot.filters.is_ban import IsBanFilter
from tgbot.misc.keyboards import sub_pay_card_sure_inline, sub_pay_card_inline
from tgbot.misc.states import SubPayCardState


async def sub_pay_month_card(call: CallbackQuery):
    await call.message.bot.send_message(call.from_user.id, '–¢–∞—Ä–∏—Ñ: <b>–ú–µ—Å—è—Ü</b>\n–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:'
                                                           ' <b>–ü–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>\n–°—É–º–º–∞ –∫ –æ—Ç–ø–ª–∞—Ç–µ: 150‚ÇΩ.'
                                                           '\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø–ª–∞—Ç–µ:\n–¢–∏–Ω–∫–æ–≤ <code>89124436363</code>'
                                                           '\n–°–∫—Ä–∏–Ω —á–µ–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—É, –ª–∏–±–æ —Å—é–¥–∞ –∂–µ –≤ –±–æ—Ç–∞',
                                        reply_markup=sub_pay_card_inline)
    await SubPayCardState.pay.set()


async def sub_pay_month_card_state(message: Message):
    await message.bot.edit_message_text('üí∞ <b>–û–ø–ª–∞—Ç–∏–ª–∏?</b>\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∫–≤–∏–Ω—Ç–∞—Ü–∏—é –æ–± '
                                                              '–æ–ø–ª–∞—Ç–µ:\n<b>—Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ —Ñ–æ—Ç–æ</b>\n'
                                                              '–ù–∞ –∫–≤–∏–Ω—Ç–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–µ—Ç–∫–æ –≤–∏–¥–Ω—ã:\n<b>'
                                                              '–¥–∞—Ç–∞, –≤—Ä–µ–º—è –∏ —Å—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞.</b>\n'
                                                              '–ò–ª–∏ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ—á–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø–ª–∞—Ç–µ–∂–∞',
                                        message.chat.id, message.message_id,
                                        reply_markup=sub_pay_card_sure_inline)


def register_card_pay(dp: Dispatcher):
    dp.register_callback_query_handler(
        sub_pay_month_card, IsBanFilter(),
        text='–°—é–¥–∞ –≤–≤–æ–¥ submonth –ø–æ –∏–¥–µ–µ',
        state="*",
    )
    dp.register_message_handler(
        sub_pay_month_card_state, IsBanFilter(),
        state=SubPayCardState.pay
    )