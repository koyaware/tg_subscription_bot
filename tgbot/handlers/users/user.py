from datetime import datetime

from aiogram import Dispatcher
from aiogram.types import Message

from tgbot.config import db, BASE_DIR, time_sub_day, ADMIN_IDS
from tgbot.filters.is_ban import IsBanFilter
from tgbot.misc.commands import Commands
from tgbot.misc.keyboards import main_info, mainMenu, sub_inline_markup, cancel_inline, subMenu, sub_link_inline
from tgbot.misc.states import FeedbackState
from tgbot.misc.text import start_message


async def user_start(message: Message):
    if (not db.user_exists(message.from_user.id)):
        db.add_user(message.from_user.id, message.from_user.username, message.from_user.full_name, datetime.now())
        for admin in ADMIN_IDS:
            await message.bot.send_message(admin, f"üÜï –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:"
                                                  f"\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username}, <b>{message.from_user.first_name}</b>\n"
                                                  f"[ID:{message.from_user.id}] —Ç–æ–ª—å–∫–æ —á—Ç–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–æ—Ç–µ.")
        await message.bot.send_message(message.from_user.id, text=start_message, reply_markup=main_info)
        with open(BASE_DIR /'contents/info.MP4', 'rb') as gif_file:
            await message.bot.send_animation(message.chat.id, gif_file, reply_markup=mainMenu)
        await message.bot.send_message(message.from_user.id,
                                       "–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π –¥–ª—è –≤–∞—Å —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω: ",
                                       reply_markup=sub_inline_markup)
    else:
        if db.get_sub_status(message.from_user.id):
            await message.bot.send_message(message.from_user.id, text=start_message, reply_markup=main_info)
            with open(BASE_DIR / 'contents/info.MP4', 'rb') as gif_file:
                await message.bot.send_animation(message.chat.id, gif_file, reply_markup=subMenu)
        else:
            await message.bot.send_message(message.from_user.id, text=start_message, reply_markup=main_info)
            with open(BASE_DIR /'contents/info.MP4', 'rb') as gif_file:
                await message.bot.send_animation(message.chat.id, gif_file, reply_markup=mainMenu)
            await message.bot.send_message(message.from_user.id,
                                           "–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π –¥–ª—è –≤–∞—Å —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω: ",
                                           reply_markup=sub_inline_markup)


async def user_subs(message: Message):
    user_sub = time_sub_day(db.get_time_sub(message.from_user.id))
    if user_sub is False:
        user_sub = "<b>–ù–µ—Ç</b>"
        user_sub = "\n–ü–æ–¥–ø–∏—Å–∫–∞: " + user_sub
        return await message.bot.send_message(message.from_user.id, f'üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∞—Ö:\n'
                                                             f'üë• <b>–¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã</b>-{user_sub}',
                                              reply_markup=sub_inline_markup)
    user_sub = "\n–ü–æ–¥–ø–∏—Å–∫–∞: " + f'<b>{user_sub}</b>'
    await message.bot.send_message(message.from_user.id, f'üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∞—Ö:\n'
                                                         f'üë• <b>–¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã</b>-{user_sub}',
                                   reply_markup=sub_link_inline)


async def user_rates(message: Message):
    await message.bot.send_message(message.from_user.id,
                                   "–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π –¥–ª—è –≤–∞—Å —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω: ",
                                   reply_markup=sub_inline_markup)


async def user_feedback(message: Message):
    await message.bot.send_message(message.from_user.id,
                                   "–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–º, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π –∏–ª–∏ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º –º–µ–¥–∏–∞–≤–ª–æ–∂–µ–Ω–∏–µ–º: ",
                                   reply_markup=cancel_inline)
    await FeedbackState.waiting_for_message.set()


async def sub_chat(message: Message):
    if db.get_sub_status(message.from_user.id):
        await message.bot.send_message(message.from_user.id, "–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª/—á–∞—Ç üëá\n"
                                                             "<b>- –¢–†–ê–ù–°–§–ï–†-–ú–û–°–¢ –ó–∞–∫–∞–∑—ã</b>",
                                       reply_markup=sub_link_inline)
    else:
        await message.bot.send_message(message.from_user.id, "<b>–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫!</b>")


def register_user(dp: Dispatcher):
    dp.register_message_handler(
        user_start, IsBanFilter(),
        text=["/start", Commands.come_back.value],
        state="*",
    )
    dp.register_message_handler(
        user_subs, IsBanFilter(), text=Commands.my_profile.value,
        state="*"
    )
    dp.register_message_handler(
        user_rates, IsBanFilter(), text=Commands.my_subs.value,
        state="*"
    )
    dp.register_message_handler(
        user_feedback, IsBanFilter(), text=Commands.feedback.value,
        state="*"
    )
    dp.register_message_handler(
        sub_chat, IsBanFilter(), text=Commands.chat.value,
        state="*"
    )